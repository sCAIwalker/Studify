{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/convert/convert.component.css","webpack:///./src/app/components/convert/convert.component.html","webpack:///./src/app/components/convert/convert.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/music/music.component.css","webpack:///./src/app/components/music/music.component.html","webpack:///./src/app/components/music/music.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/pipes/urlbypass.pipe.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/music.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { FormsModule } from '@angular/forms';\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { MusicService } from './services/music.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from './guards/auth.guard';\nimport { MusicComponent } from './components/music/music.component';\nimport { ConvertComponent } from './components/convert/convert.component';\nimport { UrlbypassPipe } from './pipes/urlbypass.pipe';\n\nconst appRoutes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]},\n  {path:'music', component: MusicComponent, canActivate:[AuthGuard]}         \n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    MusicComponent,\n    ConvertComponent,\n    UrlbypassPipe\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ValidateService, AuthService, MusicService, AuthGuard, UrlbypassPipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  convert works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-convert',\n  templateUrl: './convert.component.html',\n  styleUrls: ['./convert.component.css']\n})\nexport class ConvertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>Studify</h1>\\n    <p class=\\\"lead\\\">Welcome to Studify</p>\\n    <div>\\n      Create and account to get Started!\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Playlist Conversion</h3>\\n    <p>Convert your spotify playlist to a playlist without instrumentals when you're not feeling the lyrics!</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Background Effects</h3>\\n    <p>Add a crackling fire or peaceful rainfall to the backdrop of your music to set the mood!</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Playlist Generation</h3>\\n    <p>Getting bored with your current playlist? We'll generate a playlist for you at the click of a button!</p>\\n  </div>  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\"></h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(private authService: AuthService, private router: Router, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe((data: any) => {\n      if (data.success) {\n        console.log(data);\n        this.authService.storeUserData(data.token, data.user);\n\n        this.flashMessage.show(\"You are now logged in!\", {\n          cssClass: 'alert-success', \n          timeout: 5000});\n          window.location.href=\"http://studify.online/music/spotifyLogin\";\n      } else {\n        this.flashMessage.show(data.msg, {\n          cssClass: 'alert-danger', \n          timeout: 5000});\n        this.router.navigate(['login']);\n      }\n    });        \n  }\n}\n","module.exports = \"\"","module.exports = \"<iframe *ngIf=\\\"playlistSelected\\\" [src]=\\\"embedURI\\\" width=\\\"300\\\" height=\\\"380\\\" frameborder=\\\"0\\\" allowtransparency=\\\"true\\\" allow=\\\"encrypted-media\\\"></iframe><div class=\\\"dropdown\\\">\\n  <!-- <button *ngIf=\\\"!playlistDisplayed\\\" (click)=\\\"displayPlaylist()\\\" class=\\\"btn btn-success\\\">Choose Your Playlist</button> -->\\n  <!-- <ul *ngIf=\\\"playlistDisplayed\\\" class=\\\"list-group\\\">\\n      <li *ngFor=\\\"let playlist of playlists\\\" (click)=\\\"onPlaylistSelect(playlist)\\\" class=\\\"list-group-item\\\">{{playlist.name}}</li>\\n  </ul> -->\\n<div class=\\\"btn-group\\\">\\n  <div class=\\\"dropdown\\\">\\n      <button class=\\\"btn btn-success dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        Choose Your Playlist\\n      </button>\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n        <a class=\\\"dropdown-item\\\" *ngFor=\\\"let playlist of playlists\\\" (click)=\\\"onPlaylistSelect(playlist)\\\">{{playlist.name}}</a>\\n      </div>\\n    </div>\\n  <div class=\\\"dropdown\\\">\\n    <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        {{placeholder}}\\n    </button>\\n    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"clickedRain()\\\">Rain</a>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"clickedFireplace()\\\">Fireplace</a>    \\n    </div>\\n  </div>\\n</div>\\n<hr>\\n<audio *ngIf=\\\"showRain\\\"  controls loop=\\\"true\\\">\\n  <source src=\\\"/assets/thunderstorm.mp3\\\" type=\\\"audio/mp3\\\">\\n  <source src=\\\"/assets/thunderstorm.mp3\\\" type=\\\"audio/mpeg\\\">    \\nIf you are reading this, your browser does not support the audio element.\\n</audio>\\n<audio *ngIf=\\\"showFireplace\\\"  controls loop=\\\"true\\\">\\n  <source src=\\\"/assets/fireplace.mp3\\\" type=\\\"audio/mp3\\\">\\n  <source src=\\\"/assets/fireplace.mp3\\\" type=\\\"audio/mpeg\\\">    \\nIf you are reading this, your browser does not support the audio element.\\n</audio>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MusicService } from '../../services/music.service';\nimport {NgForm} from '@angular/forms';\nimport {UrlbypassPipe} from '../../pipes/urlbypass.pipe';\n\n@Component({\n  selector: 'app-music',\n  templateUrl: './music.component.html',\n  styleUrls: ['./music.component.css']\n})\nexport class MusicComponent implements OnInit {\n  showRain : boolean;\n  showFireplace : boolean;\n  playlists : any;\n  playlistSelected : boolean = false;\n  selected : any;\n  embedURI : any;\n  placeholder : string = \"Choose Effects\";\n\n  constructor(private musicService: MusicService, private urlbypassPipe: UrlbypassPipe) { }\n\n  ngOnInit() {\n    this.musicService.getUserPlaylists().subscribe((data: any) => {\n      console.log(data);\n      this.playlists = data;\n    });\n  }\n\n  clickedRain() {\n    console.log(\"rain\");\n    this.showRain = true;\n    this.showFireplace = false;\n    this.placeholder = \"Rain\";\n  }\n\n  clickedFireplace() {\n    console.log(\"fireplace\");\n    this.showRain = false;\n    this.showFireplace = true;\n    this.placeholder = \"Fireplace\";\n    console.log(this.selected);\n  }\n\n  onPlaylistSelect(playlist) {\n    console.log(playlist);\n    this.selected = playlist;\n    this.embedURI = \"https://open.spotify.com/embed?uri=\" + this.selected.uri;\n    this.embedURI = this.urlbypassPipe.transform(this.embedURI);\n    console.log(this.embedURI);\n    this.playlistSelected = true;\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n      </li>\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register Me</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/music']\\\">Music with Background Noise</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/convert']\\\">Convert Your Music</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n      </li>\\n      <!-- <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Dropdown\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n        </div>\\n      </li> -->\\n    </ul>\\n    <!-- <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form> -->\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass: 'alert-success',\n      timeout: 3000\n    });\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page=header\\\">{{user.name}}</h2>\\n  <ul class=\\\"list-group\\\"></ul>\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: Object;\n  \n  constructor(private authService: AuthService, private router: Router) { }\n\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((profile: any) => {\n      console.log(profile.user);\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  spotifyAccount: String;\n\n  constructor(private validateService: ValidateService, private flashMessage: FlashMessagesService, private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      spotifyAccount: this.spotifyAccount \n    }\n\n    // Required Fields\n    if(!this.validateService.validateRegister(user)) {\n      this.flashMessage.show(\"Please fill in all fields\", {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // Validate Email\n    if(!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show(\"Please use a valid email\", {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    //Register User\n    this.authService.registerUser(user).subscribe((data: any)=> {\n      if (data.success) {\n        this.flashMessage.show(\"You are now registered and can log in.\", {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login']);\n      } else{\n        this.flashMessage.show(\"Something went wrong,\", {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router) {\n\n    }\n\n    canActivate() {\n        if (this.authService.loggedIn()) {\n            return true;\n        } else {\n            this.router.navigate(['/login']);\n            return false;\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'urlbypass'\n})\nexport class UrlbypassPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  helper = new JwtHelperService();\n\n  constructor(private http:HttpClient) { }\n\n  registerUser(user) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    // 'http://localhost:3000/users/register'\n    return this.http.post('users/register', user, {headers: headers}).pipe(map(res => res));\n  }\n\n  authenticateUser(user) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post('users/authenticate', user, {headers: headers}).pipe(map(res => res));\n  }\n\n  authenticateSpotifyAccount() {\n    console.log(\"in auth.service\");\n    return this.http.get('users/spotifyLogin')\n  }\n\n  getProfile() {\n    this.loadToken();\n    console.log(this.authToken);\n    let headers = new HttpHeaders({\n      'Authorization': this.authToken,\n      'Content-Type': 'application/json'\n    });\n    return this.http.get('users/profile', {headers: headers}).pipe(map(res => res));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = \"JWT \" + token.substring(3, token.length);\n  }\n\n  loggedIn() {\n    return !this.helper.isTokenExpired(localStorage.getItem(\"id_token\"));\n  }\n\n  \n  //4220f98a90dd428cb79a258b78fbe43d\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicService {\n\n  constructor(private http: HttpClient) { }\n\n  getUserPlaylists() {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.get('music/userPlaylist', {headers: headers}).pipe(map(res => res));\n  }\n  \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n      return false;\n\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}